name: Launch RC Validation Tests
on:
  workflow_call:
    inputs:
      release_tag:
        type: string
        description: Release tag to use for the installer and upgrader
      ip:
        type: string
        description: IP address of the CloudBolt server
      additional_options:
        type: string
        description: Additional options to pass to the HUI/API test
      test_suite_path:
        description: |
          Path to the pytest test suite to be executed
        type: string
      test_area:
        description: |
          HUI or API
        type: string
      environment:
        type: string
        description: The environment from which the EC2 instance should be deployed (e.g., 'staging' or 'Smoke Tests')
        required: false
        default: staging
      type:
        description: |
          The type of upgrader that was run (e.g "PR", "RC", "GA")
        required: false
        type: string
        default: RC
      test-automation-branch:
        type: string
        description: The test-automation branch that should be used for testing
        required: false
        default: develop
      dist:
        type: string
        description: XDist Config -- The test distribution algorithm 
        required: false
        default: load
      numprocesses:
        type: string
        description: XDist Config -- number of concurrent workers to execute test cases
        required: false
        default: auto


defaults:
  run:
    shell: bash -leo pipefail {0}

jobs:
  rc_validation_test:
    name: Run Validation Tests
    runs-on:
      - self-hosted
      - ubuntu
      - m7a-xlarge
    environment:
      name: ${{ inputs.environment }}
      url: 'https://${{ inputs.ip }}'
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v2.1.0
        with:
          app_id: 175452
          private_key: ${{ secrets.CLOUDBOLT_ACTION_HELPER_PEM }}
          revoke: false

      - name: Checkout Test-Automation Repo
        uses: actions/checkout@v4.1.1
        with:
          repository: CloudBoltSoftware/test-automation
          ref: ${{ inputs.test-automation-branch }}
          token: ${{ steps.generate-token.outputs.token }}

      - name: Get Build Number For Test Annotation
        id: get-build-number
        run: |
          echo "version=$(echo ${{ inputs.release_tag }} | cut -d '.' -f1-2)" >> $GITHUB_OUTPUT
          echo "build=$(echo ${{ inputs.release_tag }} | cut -d '.' -f3)" >> $GITHUB_OUTPUT

      - name: Cache Actions
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-test-automation-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-test-automation

      - name: Run ${{ inputs.test_area }} Tests
        uses: ./.github/actions/run-pipeline-automation
        id: run-pipline-automation
        with:
          ip-address: ${{ inputs.ip }}
          path-to-test-suite: ${{ inputs.test_suite_path }}
          numprocesses: ${{ inputs.numprocesses }}
          dist: ${{ inputs.dist }}
          additional_options: |
            ${{ inputs.additional_options }} \
            -o 'rp_launch_attributes=CMPBuild:${{ steps.get-build-number.outputs.build || inputs.release_tag}}' \
          test_area_name: ${{ inputs.test_area }}-${{ inputs.type }}-${{ steps.get-build-number.outputs.version || inputs.release_tag }}

      - name:  Generate Token Post Test Run
        id: generate-token-post-run
        uses: tibdex/github-app-token@v2.1.0
        with:
          app_id: 175452
          private_key: ${{ secrets.CLOUDBOLT_ACTION_HELPER_PEM }}

      - name: Report New Failures to Slack
        id: report-new-failures-to-slack
        uses: ./.github/actions/send-new-test-failures-to-slack
        if: ${{ !cancelled() }}
        with:
          run-id: ${{ github.run_id }}
          repository: ${{ github.repository }}
          download-path: /tmp/pytest-results-${{inputs.test_area}}
          artifact-name: pytest-results-${{inputs.test_area}}
          launch-info-json: launch_info.json
          notify-slack: true
          slack-channel-id: C03BDR2NZT4
          rp-username: cb-cicd
          rp-password: ${{ secrets.RP_PASSWORD }}
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          github-token: ${{ steps.generate-token-post-run.outputs.token }}