name: 005 Azure Build VM Image

on:
  push:
    branches:
      - gcp/fix-gcp-image-build
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      release_tag:
        required: true
  workflow_call:
    # Inputs the workflow accepts.
    inputs:
      release_tag:
        required: true
        type: string

defaults:
  run:
    shell: bash -leo pipefail {0}

jobs:
  build-image:
    name: Build Azure VM Image
    runs-on:
      - self-hosted
      - oracle-linux-8
      - large
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Make Downloads Directory
        working-directory: image_build
        run: mkdir ./downloads

      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v2.1.0
        with:
          app_id: 175452
          private_key: ${{ secrets.CLOUDBOLT_ACTION_HELPER_PEM }}

      - name: Get Params.json for Release
        working-directory: image_build
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: >
          gh release download
          ${{ github.event.inputs.release_tag || inputs.release_tag }} 
          --repo cloudboltsoftware/cloudbolt 
          --pattern '*params*'
          --dir './downloads'

      - name: Get Version
        working-directory: image_build
        id: get-version
        run: echo "version=$(jq -r '.cb_version' ./downloads/*.json)" >> $GITHUB_OUTPUT

      - name: Get S3 installer URL
        working-directory: image_build
        id: get-url
        run: echo "url=$(jq -r '.cb_installer_url' ./downloads/*.json)" >> $GITHUB_OUTPUT

      - name: Create Http Directory for installer
        working-directory: image_build
        run: mkdir ./http

      - name: Download Installer
        working-directory: image_build
        run: |
          aws s3 cp --quiet ${{ steps.get-url.outputs.url }} ./http/installer.tgz

      - name: Packer Build
        # env:
        # PACKER_LOG: 1
        working-directory: image_build
        run: >
          /usr/bin/packer build
          -force
          --var="cb_version=${{ steps.get-version.outputs.version }}"
          --var="AzureClientID=${{ secrets.PACKER_AZURE_CLIENT_ID}}"
          --var="AzureClientSecret=${{ secrets.PACKER_AZURE_CLIENT_SECRET}}"
          --var="AzureSubscriptionID=${{ secrets.PACKER_AZURE_SUBSCRIPTION_ID}}"
          --var="AzureTenantID=${{ secrets.PACKER_AZURE_TENANT_ID}}"
          ./clouds/azure.pkr.hcl
